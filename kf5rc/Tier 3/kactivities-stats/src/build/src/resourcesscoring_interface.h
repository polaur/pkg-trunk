/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p resourcesscoring_interface /home/pb/Public/kf5rc/Tier 3/kactivities-stats/src/kactivities-stats-v5.45.0-rc1/src/common/dbus/org.kde.ActivityManager.ResourcesScoring.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef RESOURCESSCORING_INTERFACE_H
#define RESOURCESSCORING_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.ActivityManager.ResourcesScoring
 */
class OrgKdeActivityManagerResourcesScoringInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.ActivityManager.ResourcesScoring"; }

public:
    OrgKdeActivityManagerResourcesScoringInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeActivityManagerResourcesScoringInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> DeleteEarlierStats(const QString &activity, int months)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(activity) << QVariant::fromValue(months);
        return asyncCallWithArgumentList(QStringLiteral("DeleteEarlierStats"), argumentList);
    }

    inline QDBusPendingReply<> DeleteRecentStats(const QString &activity, int count, const QString &what)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(activity) << QVariant::fromValue(count) << QVariant::fromValue(what);
        return asyncCallWithArgumentList(QStringLiteral("DeleteRecentStats"), argumentList);
    }

    inline QDBusPendingReply<> DeleteStatsForResource(const QString &activity, const QString &client, const QString &resource)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(activity) << QVariant::fromValue(client) << QVariant::fromValue(resource);
        return asyncCallWithArgumentList(QStringLiteral("DeleteStatsForResource"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void EarlierStatsDeleted(const QString &activity, int months);
    void RecentStatsDeleted(const QString &activity, int count, const QString &what);
    void ResourceScoreDeleted(const QString &activity, const QString &client, const QString &resource);
    void ResourceScoreUpdated(const QString &activity, const QString &client, const QString &resource, double score, uint lastUpdate, uint firstUpdate);
};

namespace org {
  namespace kde {
    namespace ActivityManager {
      typedef ::OrgKdeActivityManagerResourcesScoringInterface ResourcesScoring;
    }
  }
}
#endif
